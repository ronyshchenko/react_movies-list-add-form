{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","onLabelChange","e","setState","target","id","value","onSubmit","preventDefault","props","onItemAdded","emptyValue","inputValue","this","for","type","class","aria-describedby","onChange","placeholder","rows","Component","App","moviesFromServer","maxId","addMovie","newItem","createTodoItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f45ee655.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './MovieCard.scss';\r\n\r\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\r\n  <div className=\"card\">\r\n    <div className=\"card-image\">\r\n      <figure className=\"image is-4by3\">\r\n        <img\r\n          src={imgUrl}\r\n          alt=\"Film logo\"\r\n        />\r\n      </figure>\r\n    </div>\r\n    <div className=\"card-content\">\r\n      <div className=\"media\">\r\n        <div className=\"media-left\">\r\n          <figure className=\"image is-48x48\">\r\n            <img\r\n              src=\"images/imdb-logo.jpeg\"\r\n              alt=\"imdb\"\r\n            />\r\n          </figure>\r\n        </div>\r\n        <div className=\"media-content\">\r\n          <p className=\"title is-8\">{title}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"content\">\r\n        {description}\r\n        <br />\r\n        <a href={imdbUrl}>IMDB</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nMovieCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string,\r\n  imgUrl: PropTypes.string.isRequired,\r\n  imdbUrl: PropTypes.string.isRequired,\r\n};\r\n\r\nMovieCard.defaultProps = {\r\n  description: '',\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './MoviesList.scss';\r\nimport { MovieCard } from '../MovieCard';\r\n\r\nexport const MoviesList = ({ movies }) => (\r\n  <div className=\"movies\">\r\n    {movies.map(movie => (\r\n      <MovieCard key={movie.imdbId} {...movie} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string.isRequired,\r\n      description: PropTypes.string,\r\n      imgUrl: PropTypes.string.isRequired,\r\n      imdbUrl: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nMoviesList.defaultProps = {\r\n  movies: [],\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nexport class NewMovie extends Component {\r\n  state = {\r\n    title: '',\r\n    description: '',\r\n    imgUrl: '',\r\n    imdbUrl: '',\r\n    imdbId: '',\r\n  };\r\n\r\n    onLabelChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n  \r\n  //roma\r\n\r\n  onSubmit = (e) => {\r\n    \r\n    e.preventDefault();\r\n\r\n    if(this.state.title == '' ||\r\n      this.state.description == '' ||\r\n      this.state.imgUrl=='' ||\r\n      this.state.imdbUrl=='' ||\r\n      this.state.imdbId == '')\r\n      \r\n     {\r\n      return;\r\n    }\r\n      // if(this.state.label === '') {\r\n\r\n    //     this.setState({\r\n    //       inputValue: 'true',\r\n    //       emptyValue: 'true'\r\n  \r\n    //     });\r\n    //     return;\r\n    //   }\r\n    //   this.setState({\r\n    //     emptyValue: 'true'\r\n\r\n    //   });\r\n   \r\n    //   return;\r\n    // };\r\n\r\n    // if(this.state.label === '') {\r\n    //   this.setState({\r\n    //     inputValue: 'true'\r\n\r\n    //   });\r\n    //   return;\r\n    // }\r\n    this.props.onItemAdded(this.state.title,\r\n                           this.state.description,\r\n                           this.state.imgUrl,\r\n                           this.state.imdbUrl,\r\n                           this.state.imdbId);\r\n    this.setState({\r\n      title: '',\r\n      description: '',\r\n      imgUrl: '',\r\n      imdbUrl: '',\r\n      imdbId: ''\r\n    });\r\n    this.setState({\r\n      emptyValue: false,\r\n      inputValue: false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <form onSubmit={this.onSubmit}>\r\n        <div className=\"form-group\">\r\n          <label for=\"title\">Title</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"title\" aria-describedby=\"emailHelp\"\r\n           onChange={this.onLabelChange}\r\n           placeholder=\"Enter movie title\"\r\n           value={this.state.title} />\r\n            <small id=\"emailHelp\" class=\"form-text text-muted show\">\r\n              Enter the required information\r\n            </small>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"description\">Description</label>\r\n          <textarea class=\"form-control\" id=\"description\" rows=\"3\"\r\n          onChange={this.onLabelChange}\r\n          placeholder=\"Enter movie description\"\r\n           value={this.state.description}></textarea>\r\n           <small id=\"emailHelp\" class=\"form-text text-muted show\">Enter the required information</small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label for=\"imgUrl\">Img Url</label>\r\n          <input type=\"text\" class=\"form-control show1\" id=\"imgUrl\" aria-describedby=\"emailHelp\" \r\n          onChange={this.onLabelChange}\r\n          placeholder=\"Enter an illustration for the movie\"\r\n           value={this.state.imgUrl}/>\r\n            <small id=\"emailHelp\" class=\"form-text text-muted show\">Enter the required information</small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label for=\"imdbUrl\">Imdb Url</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"imdbUrl\" aria-describedby=\"emailHelp\" \r\n          onChange={this.onLabelChange}\r\n          placeholder=\"Enter an URL for the movie\"\r\n           value={this.state.imdbUrl}/>\r\n            <small id=\"emailHelp\" class=\"form-text text-muted show\">Enter the required information</small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label for=\"imdbId\">Imdb Id</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"imdbId\" aria-describedby=\"emailHelp\" \r\n          onChange={this.onLabelChange}\r\n          placeholder=\"Enter a code for the movie\"\r\n           value={this.state.imdbId}/>\r\n            <small id=\"emailHelp\" class=\"form-text text-muted show\">Enter the required information</small>\r\n        </div>\r\n              <button type=\"submit\" class=\"btn btn-primary\">Add movie</button>\r\n      </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './App.scss';\r\nimport { MoviesList } from './components/MoviesList';\r\nimport { NewMovie } from './components/NewMovie';\r\nimport moviesFromServer from './api/movies.json';\r\n\r\nexport class App extends Component {\r\n  state = {\r\n    movies: moviesFromServer,\r\n  };\r\n\r\n  maxId = 1;\r\n\r\n  createTodoItem(title, description, imgUrl, imdbUrl, imdbId) {\r\n    return {\r\n      title,\r\n      description,\r\n      imgUrl,\r\n      imdbUrl,\r\n      imdbId,\r\n    }\r\n  }\r\n\r\n  addMovie = (title, description, imgUrl, imdbUrl, imdbId) => {\r\n    \r\n    const newItem = this.createTodoItem(title, description, imgUrl, imdbUrl, imdbId);\r\n\r\n    this.setState(({ movies }) => {\r\n      const newArr = [\r\n        ...movies,\r\n        newItem\r\n      ];\r\n\r\n      return {\r\n        movies: newArr\r\n      };\r\n    });\r\n\r\n  };\r\n\r\n  render() {\r\n    const { movies } = this.state;\r\n\r\n    return (\r\n      <div className=\"page\">\r\n        <div className=\"page-content\">\r\n          <MoviesList \r\n          movies={movies} />\r\n        </div>\r\n        <div className=\"sidebar\">\r\n          <NewMovie onItemAdded={this.addMovie}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}